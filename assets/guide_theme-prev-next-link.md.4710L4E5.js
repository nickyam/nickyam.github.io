import{_ as e,o as a,c as t,R as i}from"./chunks/framework.qZlbAeHE.js";const u=JSON.parse('{"title":"上下页链接","description":"","frontmatter":{},"headers":[],"relativePath":"guide/theme-prev-next-link.md","filePath":"guide/theme-prev-next-link.md","lastUpdated":null}'),s={name:"guide/theme-prev-next-link.md"},l=i(`<h1 id="上下页链接" tabindex="-1">上下页链接 <a class="header-anchor" href="#上下页链接" aria-label="Permalink to &quot;上下页链接&quot;">​</a></h1><p>当你想定义上一个/下一个链接上显示与侧边栏不同的文本时，可以通过配置来自定义上下页链接。</p><h2 id="上页" tabindex="-1">上页 <a class="header-anchor" href="#上页" aria-label="Permalink to &quot;上页&quot;">​</a></h2><ul><li><p>类型: <code>string</code></p></li><li><p>详情:</p><p>指定要在上一页的链接上显示的文本。</p><p>如果你没有在 frontmatter 中设置这个，文本将从侧边栏配置中推断出来。</p></li><li><p>例子:</p></li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">---</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">prev</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Get Started | Markdown&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">---</span></span></code></pre></div><h2 id="下页" tabindex="-1">下页 <a class="header-anchor" href="#下页" aria-label="Permalink to &quot;下页&quot;">​</a></h2><ul><li><p>类型: <code>string</code></p></li><li><p>详情:</p><p>与 <code>prev</code> 同理</p></li></ul>`,7),n=[l];function p(r,o,d,h,c,k){return a(),t("div",null,n)}const m=e(s,[["render",p]]);export{u as __pageData,m as default};
