import{_ as s,o as i,c as a,R as e}from"./chunks/framework.DO9dm5bS.js";const u=JSON.parse('{"title":"快速上手","description":"","frontmatter":{},"headers":[],"relativePath":"guide/getting-started.md","filePath":"guide/getting-started.md","lastUpdated":null}'),t={name:"guide/getting-started.md"},n=e(`<h1 id="快速上手" tabindex="-1">快速上手 <a class="header-anchor" href="#快速上手" aria-label="Permalink to &quot;快速上手&quot;">​</a></h1><p>本节将帮助你从头开始构建一个基本的 VitePress 文档站点。 如果您已经有一个现有项目并希望将文档保留在项目中，请从 步骤 2 开始。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>VitePress目前处于<code>alpha</code>状态。它已经适合使用开箱即用的文档，但是配置和主题化API仍然可能在小版本之间发生变化。</p></div><h2 id="步骤-1-创建一个项目" tabindex="-1">步骤 1: 创建一个项目 <a class="header-anchor" href="#步骤-1-创建一个项目" aria-label="Permalink to &quot;步骤 1: 创建一个项目&quot;">​</a></h2><p>创建并进入新项目的目录</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vitepress-starter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vitepress-starter</span></span></code></pre></div><p>用你喜欢的包管理工具初始化项目</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre></div><h2 id="步骤2-安装vitepress" tabindex="-1">步骤2: 安装VitePress <a class="header-anchor" href="#步骤2-安装vitepress" aria-label="Permalink to &quot;步骤2: 安装VitePress&quot;">​</a></h2><p>添加 VitePress 和 Vue 作为项目的开发依赖项。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vitepress</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vue</span></span></code></pre></div><details class="details custom-block"><summary>报了peer dependencies警告？</summary><p><code>@docsearch/js</code> 的peer dependencies存在某些问题。 如果你看到某些命令由于它们而失败，您现在可以尝试以下解决方法：</p><p>如果使用pnpm，在<code>package.json</code>添加以下代码：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pnpm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;peerDependencyRules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;ignoreMissing&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;@algolia/client-search&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></details><p>创建你的第一篇文章</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;# Hello VitePress&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs/index.md</span></span></code></pre></div><h2 id="step-3-启动本地开发环境" tabindex="-1">Step. 3: 启动本地开发环境 <a class="header-anchor" href="#step-3-启动本地开发环境" aria-label="Permalink to &quot;Step. 3: 启动本地开发环境&quot;">​</a></h2><p><code>package.json</code>添加以下scripts</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  ...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;docs:dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitepress dev docs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;docs:build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitepress build docs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;docs:serve&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitepress serve docs&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>启动文档网站的本地服务器</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:dev</span></span></code></pre></div><p>VitePress 将在 <code>http://localhost:5173</code> 启动一个本地开发服务器。</p><h2 id="step-4-增加更多文档" tabindex="-1">Step. 4: 增加更多文档 <a class="header-anchor" href="#step-4-增加更多文档" aria-label="Permalink to &quot;Step. 4: 增加更多文档&quot;">​</a></h2><p>再添加一个页面，创建一个名为 <code>getting-started.md</code> 的文件，与前面创建的 <code>index.md</code>同级。</p><p>现在你的目录结构应该是这样的。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>.</span></span>
<span class="line"><span>├─ docs</span></span>
<span class="line"><span>│  ├─ getting-started.md</span></span>
<span class="line"><span>│  └─ index.md</span></span>
<span class="line"><span>└─ package.json</span></span></code></pre></div><p>接下来，访问 <code>http://localhost:5173/getting-started.html</code>，可以看到 <code>getting-started.md</code> 的内容。</p><p>这就是 VitePress 的基本工作方式。 目录结构与 URL 路径相对应。 你可以添加文件，然后尝试访问它。</p><h2 id="接下来" tabindex="-1">接下来? <a class="header-anchor" href="#接下来" aria-label="Permalink to &quot;接下来?&quot;">​</a></h2><p>到目前为止，您应该拥有一个基本但功能强大的 VitePress 文档站点。 但现在用户还无法浏览该网站，因为它缺少例如我们在该网站上的侧边栏菜单。</p><p>要启用这些导航，我们必须向站点添加一些配置。 前往 <a href="./configuration.html">配置指南</a> 了解如何配置 VitePress。</p><p>如果你想了解更多关于您可以在页面中执行的操作，例如编写 Markdown 或使用 Vue 组件，请查看文档的“编写”部分。 <a href="./markdown.html">Markdown 指南</a> 将是一个很好的入口点。</p><p>如果您想了解如何自定义网站外观（主题），并了解 VitePress 默认主题提供的功能，请访问 <a href="./theme-introduction.html">主题：简介</a>。</p><p>当您的文档站点已经成形时，请务必阅读 <a href="./deploying.html">部署指南</a>。</p>`,32),p=[n];function l(h,d,k,o,r,c){return i(),a("div",null,p)}const E=s(t,[["render",l]]);export{u as __pageData,E as default};
